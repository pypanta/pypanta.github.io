const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./CBUAHvYb.js","./B-YT2MGI.js"])))=>i.map(i=>d[i]);
import{M as f}from"./B-YT2MGI.js";import{c as d,b as w,m as h,t as u}from"./DuyArxvO.js";import"./DJQvhcLS.js";async function b(t,e){return await $fetch(`/api/content/${e}/database.sql`,{context:{},responseType:"text",headers:{"content-type":"text/plain"},query:{v:d[String(e)],t:void 0}})}async function g(t,e="gzip"){var s;const a=Uint8Array.from(atob(t),i=>i.charCodeAt(0)),o=(s=new Response(new Blob([a])).body)==null?void 0:s.pipeThrough(new DecompressionStream(e));return(await new Response(o).text()).split(`
`)}function p(t,e){const a=S(t),n={...e};for(const o of a)n[o]&&n[o]!=="undefined"&&(n[o]=JSON.parse(n[o]));for(const o in n)n[o]==="NULL"&&(n[o]=void 0);return n}function S(t){const e=t.match(/FROM\s+(\w+)/);if(!e)return[];const a=w[y(e[1])];return(a==null?void 0:a.jsonFields)||[]}function y(t){return t.replace(/^_content_/,"")}let r;function k(t){return{all:async(e,a)=>(await l(t),r.exec({sql:e,bind:a,rowMode:"object",returnValue:"resultRows"}).map(n=>p(e,n))),first:async(e,a)=>(await l(t),p(e,r.exec({sql:e,bind:a,rowMode:"object",returnValue:"resultRows"}).shift())),exec:async e=>{await l(t),await r.exec({sql:e})}}}async function l(t){const e=h();if(!r){const i=await(await f(()=>import("./CBUAHvYb.js"),__vite__mapDeps([0,1]),import.meta.url).then(m=>m.default))();e.tick("Import SQLite Module"),r=new i.oo1.DB}if(window.sessionStorage.getItem("previewToken"))return r;let a=null;const n=`checksum_${t}`,o=`collection_${t}`;let c="matched";try{const s=r.exec({sql:`SELECT * FROM ${u.info} where id = '${n}'`,rowMode:"object",returnValue:"resultRows"}).shift();(s==null?void 0:s.version)!==d[String(t)]&&(c="mismatch")}catch{c="missing"}if(c!=="matched"){if(window.localStorage.getItem(`content_${n}`)===d[String(t)]&&(a=window.localStorage.getItem(`content_${o}`)),e.tick("Get Local Cache"),!a){a=await b(void 0,String(t)),e.tick("Download Database");{try{window.localStorage.setItem(`content_${n}`,d[String(t)]),window.localStorage.setItem(`content_${o}`,a)}catch(i){console.error("Database integrity check failed, rebuilding database",i)}e.tick("Store Database")}}const s=await g(a);e.tick("Decompress Database"),await r.exec({sql:`DROP TABLE IF EXISTS ${u[String(t)]}`}),c==="mismatch"&&await r.exec({sql:`DELETE FROM ${u.info} WHERE id = '${n}'`});for(const i of s)try{await r.exec(i)}catch(m){console.error("Error executing command",m)}e.tick("Restore Dump")}return e.end("Database Loaded"),r}export{k as loadDatabaseAdapter};
